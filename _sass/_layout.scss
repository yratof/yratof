
/**
 * Wrapper
 */
.wrap, .w, .wrapper {
    max-width: 90%;
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    @extend %clearfix;

    @include wider-than(tablet){	max-width: $tablet; }
    @include wider-than(desktop){	max-width: $desktop; }
    @include wider-than(cinema){	max-width: $cinema; }
}

.single{
	@include wider-than(tablet){
        max-width: $tablet;
    }

    img{
        margin-bottom: 1.5rem;

        &.size-full{
            max-width: 120%;
            width: 120%;
            position: relative;
            left: -10%;
        }
    }
}

.ma{
	margin-right: auto;
	margin-left: auto;
}

.post-header{
    text-align: center;
    padding: 2rem 0;

    svg{
      max-width: 100%;
      height: 100%;
    }
}

// List of posts
.post-list{
    list-style: none;
    margin: 0;
    width: 100%;

    li{
        float: left;
        width: 100%;

        @include wider-than(tablet){
           width: 50%;
        }

        &:nth-of-type(2n+3){ .post-link{ background-color: $blue; }}
        &:nth-of-type(3n+4){ .post-link{ background-color: $green; }}
    }
}

.post-link{
    color: white;
    background-color: $red;
    padding: 0 10px;

}

hr {
    border: 0;
    border-bottom: 1px solid #ccc;
    margin: 2rem auto;
}

.footer{
    text-align: center;
    background-color: $red;
    color: $white;
    padding: 3rem;
}


/**
 * Grid.
 * @param  int      $i          Amount of columns needed
 * @param  int      $max:       12            Total amount of columns in grid
 * @param  gutter   $guttering: 1.875rem      Space between columns with rem value
 * @param  boolean  $last:      false         Determines final gutter
 * @return width
 *
 * @usage  @include span(6, 12);              Width with gutter
 * @usage  @include span(4, 12, 1rem);        Width with custom gutter
 * @usage  @include span(6, 12, $last:true);  Last element
 */
@mixin span( $i, $max: 12, $guttering: 1.875rem, $last: null){
  // Width without REM support
  $percentage: $i * 100% / $max;
  width: $percentage - 2%;
  // Width for modern browsers
  $percentage: $percentage - 0.01111%;
  $num: $max / $i - 1;
  $margin-right: ($num * $guttering / ($num +1));
  width: calc(#{$percentage} - #{$margin-right});
  // Grid is based on floats
  float: left;
  // If last item
  @if $last == null {
    // Gutter widthout REM support
    margin-right: 2%;
    // Gutter for modern browsers
    margin-right: calc(#{$guttering});
  }
}